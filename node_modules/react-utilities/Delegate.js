"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _isPlainObject = require("is-plain-object");

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _invariant = require("invariant");

var _invariant2 = _interopRequireDefault(_invariant);

var _utils = require("./utils");

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var debug = require('debug')('react-utilities:Delegate');


var IdentityFn = function IdentityFn(props) {
  return props;
};

var Delegate = (_temp = _class = function (_Component) {
  _inherits(Delegate, _Component);

  function Delegate() {
    _classCallCheck(this, Delegate);

    return _possibleConstructorReturn(this, (Delegate.__proto__ || Object.getPrototypeOf(Delegate)).apply(this, arguments));
  }

  _createClass(Delegate, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      var $watch = nextProps.$watch;

      if (!$watch) {
        return true;
      }
      switch (typeof $watch === "undefined" ? "undefined" : _typeof($watch)) {
        case 'string':
          return this.props[$watch] !== nextProps[$watch];
        case 'boolean':
          // `$watch` should be `true` now.
          return !(0, _utils.isPropsSwallowEqual)(this.props, nextProps);
        case 'function':
          return $watch(this.props, nextProps);
        default:
          if ($watch instanceof Array) {
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
              for (var _iterator = $watch[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var key = _step.value;

                if (this.props[key] !== nextProps[key]) {
                  return true;
                }
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }

            return false;
          } else if ((0, _isPlainObject2.default)($watch)) {
            for (var _key in $watch) {
              if ($watch[_key] && this.props[_key] !== nextProps[_key]) {
                return true;
              }
            }
            return false;
          } else {
            (0, _invariant2.default)(false, 'Delegate: Unknow $watch type.');
          }
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _ = this.props._;


      var props = {};
      if (typeof _ === 'function') {
        props = _(this.props) || {};
      } else if ((0, _isPlainObject2.default)(_)) {
        for (var key in _) {
          var value = _[key];
          if (typeof value === 'string') {
            var tokens = value.split('.');
            var v = this.props;
            var _iteratorNormalCompletion2 = true;
            var _didIteratorError2 = false;
            var _iteratorError2 = undefined;

            try {
              for (var _iterator2 = tokens[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                var token = _step2.value;

                if (v != undefined) {
                  v = v[token];
                }
              }
            } catch (err) {
              _didIteratorError2 = true;
              _iteratorError2 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion2 && _iterator2.return) {
                  _iterator2.return();
                }
              } finally {
                if (_didIteratorError2) {
                  throw _iteratorError2;
                }
              }
            }

            props[key] = v;
          } else if (typeof value === 'function') {
            props[key] = value(this.props);
          } else {
            props[key] = value;
          }
        }
      } else {
        (0, _invariant2.default)(false, 'Delegate: _ should be function or plain object');
      }
      if (props !== this.props) {
        // Add rest props;
        for (var _key2 in this.props) {
          if (!(_key2 in props)) {
            props[_key2] = this.props[_key2];
          }
        }
        // Remove prop with value `undefined`
        for (var _key3 in props) {
          if (props[_key3] === undefined) {
            delete props[_key3];
          }
        }
      }

      var _props = props,
          _1 = _props._,
          _2 = _props.$watch,
          component = _props.component,
          oProps = _objectWithoutProperties(_props, ["_", "$watch", "component"]);

      return (0, _utils.render)(component, oProps);
    }
  }]);

  return Delegate;
}(_react.Component), _class.propTypes = {
  _: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.object])
  // component: RenderablePropType,
}, _class.defaultProps = {
  _: IdentityFn,
  $watch: false
}, _temp);
exports.default = Delegate;